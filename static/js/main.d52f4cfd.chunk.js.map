{"version":3,"sources":["assets/logo.svg","assets/github.svg","assets/book.svg","assets/bars.svg","assets/times.svg","components/Button/Button.jsx","components/FrontPage/FrontPage.jsx","components/Header/Header.jsx","components/Sidebar/Sidebar.jsx","components/Overview/Overview.jsx","components/PropsCard/PropsCard.jsx","helpers.js","components/AnimateHeightDocs/AnimateHeightDocs.jsx","components/FadeInDocs/FadeInDocs.jsx","components/AnimateHeightContainerDocs/AnimateHeightContainerDocs.jsx","components/AnimateOnMountDocs/AnimateOnMountDocs.jsx","components/AnimateHeightBySacrificingPerfDocs/AnimateHeightBySacrificingPerfDocs.jsx","components/DocsContainer/DocsContainer.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","className","this","props","react_default","a","createElement","concat","children","React","Component","FrontPage","build","down","by","easeTiming","src","logo","alt","left","delayBy","up","href","target","rel","components_Button_Button","github","react_router_dom","to","book","Header","onClick","toggleSidebar","bars","Sidebar","classes","classnames","sidebar--open","showSidebar","times","Overview","PropsCard","_this$props","title","explanation","resetScroll","window","scrollTo","AnimateHeightDocs","codeStrings","exampleOne","property","getCodeString","style","color","components_PropsCard_PropsCard","FadeInDocs","exampleTwo","AnimateOnMountDocs","input","AnimateHeightBySacrificingPerfDocs","DocsContainer","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","prevState","state","components_Header_Header","components_Sidebar_Sidebar","react_router","exact","path","component","AnimateHeightContainerDocs","App","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d52f4cfd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.43162b5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.4ad7f624.svg\";","module.exports = __webpack_public_path__ + \"static/media/book.01a2b09f.svg\";","module.exports = __webpack_public_path__ + \"static/media/bars.9d5d3487.svg\";","module.exports = __webpack_public_path__ + \"static/media/times.f10df4ca.svg\";","import React from 'react';\n\nimport './Button.css';\n\nclass Button extends React.Component {\n  render() {\n    const { className } = this.props;\n    return <button className={`button ${className}`}>{this.props.children}</button>;\n  }\n}\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { FadeIn } from 'react-anim-kit'\nimport { Link } from 'react-router-dom';\nimport logo from '../../assets/logo.svg';\nimport github from '../../assets/github.svg'\nimport book from '../../assets/book.svg'\n\nimport './FrontPage.css';\nimport Button from '../Button/Button';\n\nclass FrontPage extends Component {\n  render() {\n    return (\n      <div className=\"frontpage--cover\">\n        <div className=\"frontpage--container\">\n          <FadeIn down by={200} easeTiming={0.6}>\n          <img src={logo} alt=\"logo\" />\n          <h1 className=\"frontpage--header\">react anim kit</h1>\n          </FadeIn>\n          <FadeIn left by={300} easeTiming={0.6} delayBy={0.3}>\n          <div className=\"frontpage--copy\">\n            <p className=\"frontpage--copy--paragraph\">npm install react-anim-kit --save</p>\n          </div>\n          </FadeIn>\n          <FadeIn up by={300} easeTiming={0.6} delayBy={0.5}>\n          <div className=\"frontpage--button--container\">\n            <a href=\"https://github.com/FredrikOseberg/react-anim-kit\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n              <Button className=\"frontpage--button\"><img src={github} alt=\"github\" className=\"frontpage--button--icon\" />Github</Button>\n            </a>\n            <Link to=\"/docs\">\n              <Button className=\"frontpage--button\"><img src={book} alt=\"book\" className=\"frontpage--button--icon\" />Documentation</Button>\n            </Link>\n          </div>\n          </FadeIn>\n        </div>\n      </div>\n    );\n  }\n}\nexport default FrontPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport logo from '../../assets/logo.svg';\nimport bars from '../../assets/bars.svg'\n\nimport './Header.css';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n       <Link to=\"/\" className=\"header--logo-link\"> <img src={logo} alt=\"logo\" className=\"header--logo\" />\n        <h1 className=\"header--logo--text\">react anim kit</h1>\n        </Link>\n        <Link to=\"/\" className=\"header--link\">Frontpage</Link>\n        <button className=\"menu--button\" onClick={this.props.toggleSidebar}><img src={bars} alt=\"bars\" className=\"menu--button--icon\" /></button>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames'\nimport times from '../../assets/times.svg'\n\nimport './Sidebar.css';\n\nclass Sidebar extends Component {\n  render() {\n\n\n    const classes = classnames(\"sidebar\", {\n      \"sidebar--open\": this.props.showSidebar\n    })\n\n    return (\n      <div className={classes}>\n        <div className=\"sidebar--container\">\n        <button className=\"sidebar--close-button\" onClick={this.props.toggleSidebar}><img src={times} alt=\"cross\" className=\"sidebar--close-button--icon\" /></button>\n          <h1 className=\"sidebar--header\">Documentation</h1>\n          <Link to=\"/docs\" onClick={this.props.toggleSidebar}>\n            <h2 className=\"sidebar--subheader\">Overview</h2>\n          </Link>\n          <Link to=\"/docs/animateheight\" onClick={this.props.toggleSidebar}>\n            <h2 className=\"sidebar--subheader\">Components</h2>\n          </Link>\n          <ul className=\"sidebar--links\">\n            <Link to=\"/docs/animateheight\" onClick={this.props.toggleSidebar}>\n              <li>AnimateHeight</li>\n            </Link>\n            <Link to=\"/docs/animateheightcontainer\" onClick={this.props.toggleSidebar}>\n              <li>AnimateHeightContainer</li>\n            </Link>\n            <Link to=\"/docs/fadein\" onClick={this.props.toggleSidebar}>\n              <li>FadeIn</li>\n            </Link>\n            <Link to=\"/docs/animateonmount\" onClick={this.props.toggleSidebar}>\n              <li>AnimateOnMount</li>\n            </Link>\n            <Link to=\"/docs/animateheightbysacrificingperf\" onClick={this.props.toggleSidebar}>\n              <li>AnimateHeightBySacrificingPerf</li>\n            </Link>\n          </ul>\n              <div className=\"sidebar--copy\">\n            <p className=\"sidebar--copy--paragraph\">npm install react-anim-kit --save</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport { FadeIn } from 'react-anim-kit';\n\nimport './Overview.css';\n\nclass Overview extends Component {\n  render() {\n    return (\n      <FadeIn left by={300}>\n        <div className=\"overview\">\n          <h1>Overview</h1>\n          <p>\n            This package aims to do things a bit differently. In fact, it's obsessed with performing\n            animations in the most performant way possible. Therefore, most of the components\n            exposed are working with transforms to make sure that we only touch elements that avoid\n            costly layout and paint calculations. To learn more about how the browser render\n            webpages{' '}\n            <a\n              href=\"https://developers.google.com/web/fundamentals/performance/rendering/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"external-link\"\n            >\n              see this page.\n            </a>\n          </p>\n          <p>\n            In order to animate without triggering these expensive effects we are left with a few,\n            but powerful features. This library aims to use these features to circumvent the cost of\n            layout and paint. For a full list of which css properties trigger layout and paint,{' '}\n            <a\n              href=\"https://csstriggers.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"external-link\"\n            >\n              check out css triggers.\n            </a>\n          </p>\n          <h2>Components</h2>\n          <pre>\n            <code>\n              {`<AnimateHeight>\n<AnimateOnMount>\n<AnimateHeightContainer>\n<FadeIn>\n<AnimateHeightBySacrificingPerf>`}\n            </code>\n          </pre>\n          <h2>Performance</h2>\n          <p>\n            Performance is important. Not only for user experience, but also for the bottom line of\n            any business aiming to capture an online audience. Traditional animation usually touches\n            a lot of properties that perform costly calculations in the browser, which may influence\n            the experience, and revenue, of our web applications.\n          </p>\n          <h2>Can I use any of this without using React?</h2>\n          <p>\n            While this library is built on React, the principles are universal and can be used with\n            any JS framework, or vanilla JS. The most difficult and perhaps most useful feature of\n            this library is AnimateHeight. I've taken the time to build out an example in vanilla js\n            that can be used as a reference for implementing this technique in your own projects.{\" \"}\n            <a\n              href=\"https://codesandbox.io/s/3x2zjl0l7m\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"external-link\"\n            >\n              You can find the example here.\n            </a>\n          </p>\n        </div>\n      </FadeIn>\n    );\n  }\n}\nexport default Overview;\n","import React, { Component } from 'react';\n\nimport './PropsCard.css';\n\nclass PropsCard extends Component {\n  render() {\n    const { title, explanation } = this.props;\n    return (\n      <div className=\"propscard\">\n        <h1 className=\"propscard--title\">{title}</h1>\n        <p className=\"proprscard--explanation\">{explanation}</p>\n      </div>\n    );\n  }\n}\nexport default PropsCard;\n","export const resetScroll = () => {\n  window.scrollTo(0, 0);\n};\n","import React, { Component } from 'react';\nimport { FadeIn } from 'react-anim-kit';\n\nimport PropsCard from '../PropsCard/PropsCard';\n\nimport './AnimateHeightDocs.css';\nimport { Link } from 'react-router-dom';\nimport { resetScroll } from '../../helpers';\n\nclass AnimateHeightDocs extends Component {\n  componentDidMount() {\n    resetScroll();\n  }\n\n  codeStrings = {\n    exampleOne: `\n  handleClick() {\n    this.setState(prevState => ({ open: !prevState.open }))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div class=\"container\">\n          <AnimateHeight\n            style={{ backgroundColor: \"#f2f2f2\" }}\n            shouldChange={this.state.open}\n            renderSpaceAfter\n          >\n            <div>\n              {!this.state.open && (\n                <div>\n                  <p>Render this initially</p>\n                </div>\n              )}\n              {this.state.open && (\n                <p style={{ marginTop: \"4rem\" }}>\n                  Lorem ipsum dolor sit amet, \n                  consectetur adipiscing elit.\n                  Aenean enim nulla, lobortis vitae \n                  elit a, tempor ultrices\n                  magna.\n                </p>\n              )}\n            </div>\n          </AnimateHeight>\n          <button\n            onClick={this.handleClick}\n          >\n            Hello\n          </button>\n        </div>\n      </div>\n    );\n  }`\n  };\n\n  getCodeString(property) {\n    return this.codeStrings[property];\n  }\n\n  render() {\n    return (\n      <FadeIn left by={300}>\n        <div className=\"animateHeightDocs\">\n          <div className=\"animateHeightInfo\">\n            <h1>AnimateHeight</h1>\n            <p>\n              This component works a bit differently. In fact, to make it performant, it actually\n              doesn't animate height at all. Instead it leverages the capabilities of transform:\n              scaleY to be able to give the illusion of animating height.\n            </p>\n            <p>\n              It performs calculations to scale an absolutely positioned background to adjust to the\n              content, and gives you the ability to pass in a callback that will receive the\n              transition amount so you can adjust the surrounding content. This way, we perform the\n              minimum amount of layout and paint.\n            </p>\n            <h2>How it works</h2>\n            <p>Let's see a simple example:</p>\n            <pre>\n              <code>{this.getCodeString('exampleOne')}</code>\n            </pre>\n            <p>There are a few things to note here:</p>\n            <ul>\n              <li>The styling of the background of the element is set on AnimateHeight</li>\n              <li>AnimateHeight takes a shouldChange property</li>\n            </ul>\n            <p>\n              So let's walk through what is going on here. The containing div serves only as a\n              shell, while the transformation of scaleY happens on an absolutely positioned div that\n              is configured to span the entire width and height of the container.\n            </p>\n            <p>\n              When the button is clicked, the open property will change and AnimateHeight will start\n              doing work. First it will get the new height of the content. Then it will use this and\n              calculate the amount that the background needs to scale. The background is then scaled\n              to fit the new content.\n            </p>\n            <a\n              href=\"https://codesandbox.io/embed/983z7n92rw?fontsize=14\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"external-link\"\n            >\n              See a simple example here on Codesandbox\n            </a>\n            <h3>What about surrounding content?</h3>\n            <p>\n              Using transforms make the animation a lot more performant, because we skip expensive\n              layout and paint on every frame. However, since we are now using transform, the\n              surrounding content won't react to the change. Therefore AnimateHeight takes a\n              callback that receives the transition amount and id (if provided in props) as the two\n              arguments to the function. This means that you can update state from a parent\n              component and use the transition amount to transition the surrounding content.\n            </p>\n            <a\n              href=\"https://codesandbox.io/s/jn5rp5jvzy?fontsize=14\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"external-link\"\n            >\n              See an example of moving surrounding content on Codesandbox\n            </a>\n            <h3>AnimateHeightContainer</h3>\n            <p>\n              If there is a lot of content you need to wrap, or multiple even multiple AnimateHeight\n              components that affect different parts of your application, you can use the\n              AnimateHeightContainer to move your content for you. It's more thourougly described{' '}\n              <Link style={{ color: 'blue' }} to=\"/docs/animateheightcontainer\">\n                here.\n              </Link>\n            </p>\n            <a\n              href=\"https://codesandbox.io/s/6zz62yp65w?fontsize=14\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"external-link\"\n            >\n              See an example of moving surrounding content with AnimateHeightContainer on\n              Codesandbox\n            </a>\n            <a\n              href=\" https://codesandbox.io/s/202w3n81q0?fontsize=14\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"external-link\"\n            >\n              See an advanced example of AnimateHeightContainer usage on Codesandbox\n            </a>\n\n            <h2>Props</h2>\n            <PropsCard\n              title=\"shouldChange: boolean\"\n              explanation=\"Controls when the animation should run. Typically it will be the conditional that decides what content to show.\"\n            />\n            <PropsCard\n              title=\"style: object\"\n              explanation=\"The style prop receives a style object and sets it on the container that is being animated. If you want to set a different background-color, pass a style object with your preferred color of choice.\"\n            />\n            <PropsCard\n              title=\"handleTransitionEnd: function\"\n              explanation=\"The handleTransitionEnd prop takes a function that is set to listen to transitionEnd events on window.\"\n            />\n            <PropsCard\n              title=\"callback: function: (transitionAmount, id) => void\"\n              explanation=\"The callback function is called every time the component should change and receives the transitionAmount and optionally the id as input. The transitionamount can then be used to offset surrounding content.\"\n            />\n            <PropsCard\n              title=\"id: number\"\n              explanation=\"Id is used to keep track of which animateheight is being fired. For example if you use multiple animateHeight and you need to dynamically change which content is offset. Commonly used with AnimateHeightContainer.\"\n            />\n            <PropsCard\n              title=\"renderSpaceAfter: boolean\"\n              explanation=\"If renderSpaceAfter is set to true, the component will insert a div with height matching the amount the component has been transitioned, to offset the content below the component.\"\n            />\n            <PropsCard\n              title=\"style: object\"\n              explanation=\"Takes a style object that is passed to the absolutely positioned background div.\"\n            />\n          </div>\n        </div>\n      </FadeIn>\n    );\n  }\n}\nexport default AnimateHeightDocs;\n","import React, { Component } from 'react';\nimport { FadeIn } from 'react-anim-kit';\n\nimport './FadeInDocs.css';\nimport PropsCard from '../PropsCard/PropsCard';\nimport { resetScroll } from '../../helpers';\n\nclass FadeInDocs extends Component {\n  componentDidMount() {\n    resetScroll();\n  }\n\n  codeStrings = {\n    exampleOne: `\n<FadeIn right by={300}>\nThis will be faded in right by 300px\n</FadeIn>\n\n<FadeIn up by={500} delayBy={2}>\nThis will be faded in upwards by 500px after 2 seconds\n</FadeIn>\n\n<FadeIn left by={150} easeTiming={1s}>\nThis will change the default ease timing \nfrom 0.5s to 1s and fade in left by 150px\n</FadeIn>\n\n<FadeIn down by={200}>\n    This will fade down by 200px instantly.\n    <FadeIn left by={200} delayBy={1}>\n        This will fade in left after 1s.\n    </FadeIn>\n</FadeIn>`\n  };\n\n  getCodeString(property) {\n    return this.codeStrings[property];\n  }\n\n  render() {\n    return (\n      <FadeIn left by={300}>\n        <div className=\"fadeInDocs\">\n          <h1>FadeIn</h1>\n          <p>\n            The FadeIn component uses opacity to fade in any of it's children. It is composable, so\n            you can have nested FadeIn components within FadeIn components, making it very easy to\n            create animations that build on each other. Every slide in animation on this page is created using this component.\n          </p>\n          <pre>\n            <code>{this.getCodeString('exampleOne')}</code>\n          </pre>\n          <h2>Props</h2>\n          <PropsCard\n            title=\"up: boolean\"\n            explanation=\"Decides which direction fadein should occur from. If true, component content will fade in from the bottom up.\"\n          />\n          <PropsCard\n            title=\"down: boolean\"\n            explanation=\"Decides which direction fadein should occur from. If true, component content will fade in from the top down.\"\n          />\n          <PropsCard\n            title=\"left: boolean\"\n            explanation=\"Decides which direction fadein should occur from. If true, component content will fade in from right to left\"\n          />\n          <PropsCard\n            title=\"right: boolean\"\n            explanation=\"Decides which direction fadein should occur from. If true, component content will fade in from left to right.\"\n          />\n          <PropsCard\n            title=\"easeTiming: number (seconds)\"\n            explanation=\"Determines the easetiming for the transform. Denoted in seconds. For example: 0.5\"\n          />\n          <PropsCard\n            title=\"delayBy: number (seconds)\"\n            explanation=\"Determines whether or not the animation will be delayed. Denoted in seconds. For example: 0.5\"\n          />\n        </div>\n      </FadeIn>\n    );\n  }\n}\nexport default FadeInDocs;\n","import React, { Component } from 'react';\nimport { FadeIn } from 'react-anim-kit';\n\nimport PropsCard from '../PropsCard/PropsCard';\nimport { resetScroll } from '../../helpers';\n\nclass AnimateHeightDocs extends Component {\n  componentDidMount() {\n    resetScroll();\n  }\n\n  codeStrings = {\n    exampleOne: `\nhandleAnimateHeight = (transitionAmount, selectedId) => {\n  this.setState({ transitionAmount, selectedId });\n};\n\nrender() {\n  <div className=\"app\">\n    <AnimateHeightContainer \n      transitionAmount={this.state.transitionAmount} \n      selectedId={this.state.selectedId}\n    >\n      <AnimateHeight\n        shouldChange={this.state.open}\n        animateHeightId={1}\n        callback={this.handleAnimateHeight}\n      />\n      <VideoImage\n        animateHeightId={2}\n      />\n      <Slideshow\n        animateHeightId={3}\n      />\n    </AnimateHeightContainer>\n  </div>\n}`,\n    exampleTwo: `\nhandleAnimateHeight = (transitionAmount, selectedId) => {\n  const { transitionAmounts } = this.state;\n  const result = [];\n\n  if (transitionAmount === 0) {\n    transitionAmounts.forEach(item => {\n      if (item.id === selectedId) {\n        return;\n      }\n      result.push(item);\n    });\n  } else {\n    const item = { id: selectedId, transitionAmount };\n    result.push(...transitionAmounts, item);\n  }\n  this.setState({ transitionAmounts: result });\n};\n\nrender() {\n  return (\n    <div className=\"app\">\n      <AnimateHeightContainer\n        transitionAmounts={this.state.transitionAmounts}\n      >\n        <Accordion\n          title={\"Top Movies\"}\n          animateHeightId={1}\n          handleAnimateHeight={this.handleAnimateHeight}\n        />\n        <Accordion\n          title={\"Top Actors\"}\n          animateHeightId={2}\n          handleAnimateHeight={this.handleAnimateHeight}\n        />\n        <Accordion\n          title={\"Top TV Shows\"}\n          animateHeightId={3}\n          handleAnimateHeight={this.handleAnimateHeight}\n        />\n      </AnimateHeightContainer>\n    </div>\n  );\n }\n}`\n  };\n\n  getCodeString(property) {\n    return this.codeStrings[property];\n  }\n\n  render() {\n    return (\n      <FadeIn left by={300}>\n        <div className=\"animateHeightDocs\">\n          <div className=\"animateHeightInfo\">\n            <h1>AnimateHeightContainer</h1>\n            <p>\n              This component plays together with AnimateHeight. Since AnimateHeight works by using\n              transforms, we need to move the other pieces of our webpages accordingly. This\n              component helps to smooth out that process.\n            </p>\n            <p>\n              AnimateHeightContainer takes in the transitionAmount and selectedId that you can\n              retrieve by passing a callback function to the AnimateHeight component. Using these\n              attributes, it wraps every child inside it in a div, and applies the transformation\n              with the transformation amount to that div if the id is greater than the currently\n              selected id passed into the component.\n            </p>\n\n            <h2>How it works</h2>\n            <p>Consider the following example:</p>\n            <pre>\n              <code>{this.getCodeString('exampleOne')}</code>\n            </pre>\n            <p>\n              In this example we have a single AnimateHeight component and we need to change the\n              position of the VideoImage and SlideShow components. When AnimateHeight is activated,\n              our callback function will trigger inside the AnimateHeight component and update the\n              parent components state with transitionAmount and selectedId. Once this happens,\n              AnimateHeightContainer will receive these attributes as props and determine which\n              content should be moved.\n            </p>\n            <p>\n              In this case, since the selectedId id is 1, AnimateHeightContainer will check it's\n              children one by one and see that VideoImage and Slider components animateHeightId is\n              greater than the selectedId, and apply the transformation with the provided\n              transitionAmount.\n            </p>\n            <a\n              href=\"https://codesandbox.io/s/6zz62yp65w?fontsize=14\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"external-link\"\n            >\n              <p>You can see an example of this here</p>\n            </a>\n            <h3>What about using multiple AnimateHeight components?</h3>\n            <p>\n              The above example would of course break if you ever were in a situation where you\n              needed to take into account the height of multiple scaled containers. So\n              AnimateHeightContainer is configured to either take transitionAmount and selectedId as\n              props, or an array of transitionAmounts. If an array is passed it expects it to be in\n              the form of <br />\n              <br />\n              <code>{`[{id: number, transitionAmount: number }]`}</code>\n              <br />\n              <br />\n            </p>\n            <p>\n              This means that we can use multiple AnimateHeights in a structure like Accordion and\n              have the surrounding content move accordingly (pun intended). Consider the following\n              example:\n            </p>\n            <pre>\n              <code>{this.getCodeString('exampleTwo')}</code>\n            </pre>\n            <p>\n              In the above example there is an AnimateHeight component placed in each accordion that\n              receives the handleAnimateHeight function and animateHeightId. When AnimateHeight is\n              activated, internally it will call handleAnimateHeight with the transitionAmount and\n              animateHeightId. It will also call the callback function when it is closed, this time\n              with the input of transitionAmount 0 and the same AnimateHeightId.\n            </p>\n            <p>\n              This allows us to add and remove items with the shape that AnimateHeightContainer\n              expects, and pass them in as props. The component will then take this array and make\n              the necessary adjustments based on the animateHeightIds of it's children.\n            </p>\n            <p>\n              It goes something like this: For every child in AnimateHeightContainer, loop over the\n              transitionAmounts array and check if it's id is greater than my childs\n              animateHeightId. If it is, add it's transitionAmount to the result. Once all item's\n              are checked return a jsx div moved by the final amount.\n            </p>\n            <a\n              href=\"https://codesandbox.io/s/202w3n81q0?fontsize=14\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"external-link\"\n            >\n              See a live example here\n            </a>\n            <h2>Props</h2>\n            <PropsCard\n              title=\"transitionAmount: number\"\n              explanation=\"Controls the amount surrunding content needs to move when AnimateHeight is activated\"\n            />\n            <PropsCard\n              title=\"selectedId: number\"\n              explanation=\"Represents the id of the activated AnimateHeight. Used to determine which content to move\"\n            />\n            <PropsCard\n              title=\"transitionAmounts: [{ transitionAmount: number, id: number }]\"\n              explanation=\"Used when you have multiple AnimateHeight containers and you need to move content taking into account the transitionamount of multiple scaled containers. Used instead of transitionAmount and selectedId. NB: The AnimateHeightContainer component will not work correctly if you specify transitionAmounts and selectedId/transitionAmount props.\"\n            />\n          </div>\n        </div>\n      </FadeIn>\n    );\n  }\n}\nexport default AnimateHeightDocs;\n","import React, { Component } from 'react';\nimport { FadeIn } from 'react-anim-kit';\n\nimport './AnimateOnMountDocs.css';\nimport PropsCard from '../PropsCard/PropsCard';\nimport { resetScroll } from '../../helpers';\n\nclass AnimateOnMountDocs extends Component {\n  componentDidMount() {\n    resetScroll();\n  }\n\n  codeStrings = {\n    exampleOne: `render() {\n    <div>\n        {show && <SomeComponent />}\n    </div>\n}`\n  };\n\n  getCodeString(input) {\n    return this.codeStrings[input];\n  }\n\n  render() {\n    return (\n      <FadeIn left by={300}>\n        <div className=\"animateOnMountDocs\">\n          <h1>AnimateOnMount</h1>\n          <p>\n            The AnimateOnMount component is used to animate components that enter and leave the DOM.\n            Since React utilises a viritual DOM we often use expressions to handle conditional\n            rendering. For example:\n            <pre>\n              <code>{this.getCodeString('exampleOne')}</code>\n            </pre>\n          </p>\n          <p>\n            This presents a problem when we want to have components that animate when they enter and\n            leave the DOM. AnimateOnMount solves this problem by acting as a middleman between the\n            condition to show and the component that is to be shown. It will offset the removal of\n            the component from the DOM until it has finished it's animation.\n          </p>\n          <a\n            href=\"https://codesandbox.io/s/kw7r4yxyx7?fontsize=14\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"external-link\"\n          >\n            See a live example here\n          </a>\n          <h2>Props</h2>\n          <PropsCard\n            title=\"mounted: boolean\"\n            explanation=\"Decides whether or not to display the content it wraps.\"\n          />\n          <PropsCard\n            title=\"start: string\"\n            explanation=\"Represents the name of the CSS class you want as a starting point for your wrapped content. For example the baseline for animation.\"\n          />\n          <PropsCard\n            title=\"enter: string\"\n            explanation=\"Represents the name of the CSS class you want to apply when the content is entering the DOM. Typically this CSS class will contain the actual animation.\"\n          />\n          <PropsCard\n            title=\"leave: string\"\n            explanation=\"Represents the name of the CSS class you want to apply when the content is leaving the DOM.\"\n          />\n        </div>\n      </FadeIn>\n    );\n  }\n}\nexport default AnimateOnMountDocs;\n","import React, { Component } from 'react';\nimport { FadeIn } from 'react-anim-kit';\n\nimport './AnimateHeightBySacrificingPerfDocs.css';\nimport PropsCard from '../PropsCard/PropsCard';\nimport { resetScroll } from '../../helpers';\n\nclass AnimateHeightBySacrificingPerfDocs extends Component {\n  componentDidMount() {\n    resetScroll();\n  }\n\n  codeStrings = {\n    exampleOne: `const { open } = this.state\n\n<div className=\"container\">\n    <AnimateHeightBySacrificingPerf shouldChange={open}>\n        {open && <SomeContent />}\n        {!open && <OtherContent />}\n    </AnimateHeightBySacrificingPerf>\n</div>`\n  };\n\n  getCodeString(input) {\n    return this.codeStrings[input];\n  }\n\n  render() {\n    return (\n      <FadeIn left by={300}>\n        <div className=\"animateHeightBySacrificingPerf\">\n          <h1>AnimateHeightBySacrificingPerf</h1>\n          <p>\n            This component is here because it inspired a lot of my work with AnimateHeight. I made\n            this component first, then realised how badly it performed - even on my high end Macbook\n            Pro. I do not recommend that you use this component if you care about performance. It\n            will trigger layout and paint on every frame of the animation, and will lead to poor\n            user experience. Use AnimateHeight instead.\n          </p>\n          <p>\n            That being said. It can be useful if you just want to test how something looks, or you\n            are making something that is for internal use only. It's dead simple to use:\n            <pre>\n              <code>{this.getCodeString('exampleOne')}</code>\n            </pre>\n          </p>\n          <a\n            href=\"https://codesandbox.io/s/92n8vlk9ow?fontsize=14\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"external-link\"\n          >\n            See a live example here\n          </a>\n          <h2>Props</h2>\n          <PropsCard\n            title=\"shouldChange: boolean\"\n            explanation=\"Controls when the animation should run. Typically it will be the conditional that decides what content to show.\"\n          />\n          <PropsCard\n            title=\"transition: string\"\n            explanation=\"Provides a way to override the default transition.\"\n          />\n          <PropsCard\n            title=\"adjustOnTransitionEnd: boolean\"\n            explanation=\"Determines whether to adjust height on transition end. Useful if you have other transformations on the content box\"\n          />\n        </div>\n      </FadeIn>\n    );\n  }\n}\nexport default AnimateHeightBySacrificingPerfDocs;\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Header from '../Header/Header';\nimport Sidebar from '../Sidebar/Sidebar';\nimport Overview from '../Overview/Overview';\nimport AnimateHeightDocs from '../AnimateHeightDocs/AnimateHeightDocs';\nimport FadeInDocs from '../FadeInDocs/FadeInDocs';\nimport AnimateHeightContainerDocs from '../AnimateHeightContainerDocs/AnimateHeightContainerDocs';\nimport AnimateOnMountDocs from '../AnimateOnMountDocs/AnimateOnMountDocs';\nimport AnimateHeightBySacrificingPerfDocs from '../AnimateHeightBySacrificingPerfDocs/AnimateHeightBySacrificingPerfDocs';\n\nimport './DocsContainer.css';\n\nclass DocsContainer extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showSidebar: false\n    }\n  }\n\n  toggleSidebar = () => this.setState(prevState => ({ showSidebar: !prevState.showSidebar }))\n \n  render() {\n    return (\n      <div className=\"docs--container\">\n        <Header toggleSidebar={this.toggleSidebar} />\n        <div className=\"docs--inner--container\">\n          <Sidebar toggleSidebar={this.toggleSidebar} showSidebar={this.state.showSidebar}/>\n          <div className=\"docs--content\">\n            <Route exact path=\"/docs\" component={Overview} />\n            <Route path=\"/docs/animateheight\" component={AnimateHeightDocs} />\n            <Route path=\"/docs/animateheightcontainer\" component={AnimateHeightContainerDocs} />\n            <Route path=\"/docs/fadein\" component={FadeInDocs} />\n            <Route path=\"/docs/animateOnMount\" component={AnimateOnMountDocs} />\n            <Route\n              path=\"/docs/animateheightbysacrificingperf\"\n              component={AnimateHeightBySacrificingPerfDocs}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default DocsContainer;\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport FrontPage from './components/FrontPage/FrontPage';\nimport DocsContainer from './components/DocsContainer/DocsContainer';\n\nimport './App.css';\nimport './index.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <HashRouter>\n          <Route path=\"/\" exact component={FrontPage} />\n          <Route path=\"/docs\" component={DocsContainer} />\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}